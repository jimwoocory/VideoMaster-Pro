name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller yt-dlp
        
    - name: Download yt-dlp
      run: |
        Invoke-WebRequest -Uri "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe" -OutFile "yt-dlp.exe"
        
    - name: Download FFmpeg
      run: |
        Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip" -OutFile "ffmpeg.zip"
        
    - name: Build executable
      run: |
        python build_final.py
        
    - name: Check build result
      run: |
        if (Test-Path "dist/VideoMaster Pro Complete.exe") {
          Write-Host "✓ Build successful"
          Get-Item "dist/VideoMaster Pro Complete.exe" | Select-Object Name, Length
        } else {
          Write-Host "✗ Build failed"
          exit 1
        }
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: VideoMaster-Pro-Windows
        path: dist/VideoMaster Pro Complete.exe
        retention-days: 30
        
  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: VideoMaster-Pro-Windows
        path: ./artifacts/
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/VideoMaster Pro Complete.exe
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}